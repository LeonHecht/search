@tailwind base;
@tailwind components;
@tailwind utilities;

/* @layer base {
  html {
    @apply font-mono;
  }
} */

@layer components {
    /* Make wrapper relative so ::after is positioned inside it */
    .input-wrapper {
        position: relative;
    }

    /* Hide the native caret when focused */
    .input-wrapper input:focus {
        caret-color: transparent;
        placeholder-color: transparent; /* Hide placeholder text */
    }

    /* Fake breathing caret at the left inside the input */
  .input-wrapper::after {
    content: "";
    position: absolute;
    left: 0.75rem;       /* matches `p-3` padding */
    top: 50%;
    transform: translateY(-50%);
    width: 1.2px;
    height: 1.5em;         /* animates down to 0.4em */
    opacity: 0;      /* hidden by default */
    background: currentColor;
    transition: opacity 0.1s ease-in-out;
    pointer-events: none;
    /* color: gray; */
  }

   /* Only when the input (child) is focused: show & animate */
  .input-wrapper:focus-within::after {
    opacity: 1;
    animation: caret-grow 1s ease-in-out infinite;
  }
  
   .input-wrapper.caret-hidden::after {
    opacity: 0 !important;
    animation: none !important;
  }

  .input-wrapper.caret-hidden input:focus {
    caret-color: auto;
  }
}

/* Define the keyframes in the utilities layer */
@layer utilities {
  @keyframes caret-grow {
    0%, 100% { height: 1.5em; }
    50%      { height: 0.2em; }
  }
}

@keyframes fade-in-out {
  0%, 100% { opacity: 0; }
  10%, 90% { opacity: 1; }
}
.animate-fade-in-out {
  animation: fade-in-out 2s ease-in-out forwards;
}